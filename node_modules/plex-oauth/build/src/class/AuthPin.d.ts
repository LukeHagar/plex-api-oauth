import { IPlexCodeResponse, IPlexClientDetails } from "../models/PlexCodeModels";
export declare class AuthPin {
    constructor();
    /**
     * Request's an OAuth Pin from the Plex API, which is used to get the Auth Token
     * @param {IPlexClientDetails} clientInfo Client information to send to the Plex API
     *
     * @returns {Promise<IPlexCodeResponse>} The hosted ui URL
     */
    getPin(clientInfo: IPlexClientDetails): Promise<IPlexCodeResponse>;
    /**
     * Sends repeated requests to the Plex Pin API with the provided pin id. It will then return
     * the auth token if it gets one, or null if it runs out of retries.
     * @param {IPlexClientDetails} clientInfo Client information to send to the Plex API
     * @param {number} pinId The id of the Plex pin to query for
     * @param {number} requestDelay The delay in seconds to wait between each poll
     * @param {number} maxRetries The number of retries before returning null
     *
     * @returns {Promise<string | null>} The auth token if found or null
     */
    pollForAuthToken(clientInfo: IPlexClientDetails, pinId: number, requestDelay: number, maxRetries: number): Promise<string | null>;
}
